[
  {
    "key": "workbench.panel.aichat.numberOfVisibleViews",
    "data": 1
  },
  {
    "key": "workbench.panel.aichat.view.aichat.chatdata",
    "data": {
      "tabs": [
        {
          "tabId": "bc8d2a24-8b68-4a7f-bad9-e7dfcdee35ca",
          "chatTitle": "Using Ctrl + K in Cursor IDE for Contextual Help",
          "bubbles": [
            {
              "notepads": [],
              "selections": [],
              "fileSelections": [],
              "folderSelections": [],
              "selectedDocs": [],
              "selectedCommits": [],
              "selectedPullRequests": [],
              "terminalSelections": [],
              "terminalFiles": [],
              "quotes": [],
              "externalLinks": [],
              "selectedImages": [],
              "useWeb": false,
              "mentions": {
                "notepads": {},
                "selections": {},
                "fileSelections": {},
                "folderSelections": {},
                "selectedDocs": {},
                "selectedCommits": {},
                "selectedPullRequests": {},
                "terminalSelections": {},
                "terminalFiles": {},
                "quotes": {},
                "externalLinks": {},
                "selectedImages": {},
                "gitDiff": [],
                "gitDiffFromBranchToMain": [],
                "usesCodebase": [],
                "useWeb": []
              },
              "type": "user",
              "id": "25c13326-a194-4825-ab61-93f014c5b9dd",
              "messageType": 2,
              "dropdownAdvancedCodebaseSearchBehavior": "embeddings",
              "followup": false,
              "text": "in cursor the ide, what context is used when using ctrl + k?",
              "richText": "{\"root\":{\"children\":[{\"children\":[{\"detail\":0,\"format\":0,\"mode\":\"normal\",\"style\":\"\",\"text\":\"in cursor the ide, what context is used when using ctrl + k?\",\"type\":\"text\",\"version\":1}],\"direction\":\"ltr\",\"format\":\"\",\"indent\":0,\"type\":\"paragraph\",\"version\":1}],\"direction\":\"ltr\",\"format\":\"\",\"indent\":0,\"type\":\"root\",\"version\":1}}",
              "isFocused": false,
              "initText": "{\"root\":{\"children\":[{\"children\":[{\"detail\":0,\"format\":0,\"mode\":\"normal\",\"style\":\"\",\"text\":\"in cursor the ide, what context is used when using ctrl + k?\",\"type\":\"text\",\"version\":1}],\"direction\":\"ltr\",\"format\":\"\",\"indent\":0,\"type\":\"paragraph\",\"version\":1}],\"direction\":\"ltr\",\"format\":\"\",\"indent\":0,\"type\":\"root\",\"version\":1}}"
            },
            {
              "type": "ai",
              "messageType": 3,
              "id": "c2c64d74-bae7-40fd-898e-b9db31e4c893",
              "text": "In Cursor, the AI-powered IDE, the context used when pressing Ctrl + K (or Cmd + K on macOS) is typically the following:\n\n1. Current file content: The entire content of the file you're currently editing.\n\n2. Cursor position: The location of your text cursor within the file.\n\n3. Selected text: Any text you have highlighted or selected.\n\n4. Open files: Information about other files that are currently open in your workspace.\n\n5. Project structure: The overall structure of your project, including file and folder organization.\n\n6. Language context: The programming language of the current file, which helps the AI understand the syntax and semantics.\n\n7. Recent edits: Recent changes you've made to the file or project.\n\n8. Visible code: The code that's currently visible in your editor window.\n\nWhen you press Ctrl + K, Cursor opens an AI chat interface where you can ask questions or request changes related to your code. The AI uses this context to provide more accurate and relevant responses to your queries or to make appropriate code suggestions and edits.\n\nIt's worth noting that the exact context might vary slightly depending on the version of Cursor you're using and any updates or changes to the software. However, these are generally the key elements of context that Cursor considers when you use the Ctrl + K shortcut.",
              "aiType": "chat",
              "modelType": "claude-3.5-sonnet",
              "suggestedDiffs": [],
              "referencedCodeBlockURIs": [],
              "requestId": "32f263ed-ef77-4336-8c25-2383891df46f",
              "rawText": "In Cursor, the AI-powered IDE, the context used when pressing Ctrl + K (or Cmd + K on macOS) is typically the following:\n\n1. Current file content: The entire content of the file you're currently editing.\n\n2. Cursor position: The location of your text cursor within the file.\n\n3. Selected text: Any text you have highlighted or selected.\n\n4. Open files: Information about other files that are currently open in your workspace.\n\n5. Project structure: The overall structure of your project, including file and folder organization.\n\n6. Language context: The programming language of the current file, which helps the AI understand the syntax and semantics.\n\n7. Recent edits: Recent changes you've made to the file or project.\n\n8. Visible code: The code that's currently visible in your editor window.\n\nWhen you press Ctrl + K, Cursor opens an AI chat interface where you can ask questions or request changes related to your code. The AI uses this context to provide more accurate and relevant responses to your queries or to make appropriate code suggestions and edits.\n\nIt's worth noting that the exact context might vary slightly depending on the version of Cursor you're using and any updates or changes to the software. However, these are generally the key elements of context that Cursor considers when you use the Ctrl + K shortcut.",
              "codeBlocks": []
            },
            {
              "notepads": [],
              "selections": [],
              "fileSelections": [],
              "folderSelections": [],
              "selectedDocs": [],
              "selectedCommits": [],
              "selectedPullRequests": [],
              "terminalSelections": [],
              "terminalFiles": [],
              "quotes": [],
              "externalLinks": [],
              "selectedImages": [],
              "useWeb": false,
              "mentions": {
                "notepads": {},
                "selections": {},
                "fileSelections": {},
                "folderSelections": {},
                "selectedDocs": {},
                "selectedCommits": {},
                "selectedPullRequests": {},
                "terminalSelections": {},
                "terminalFiles": {},
                "quotes": {},
                "externalLinks": {},
                "selectedImages": {},
                "gitDiff": [],
                "gitDiffFromBranchToMain": [],
                "usesCodebase": [],
                "useWeb": []
              },
              "type": "user",
              "id": "7fbe9e02-8284-42b6-9307-8c9b8b2b3aca",
              "messageType": 2,
              "dropdownAdvancedCodebaseSearchBehavior": "embeddings",
              "followup": true,
              "text": "is there a way i can sort files in my cursor file explorer based on date created?",
              "richText": "{\"root\":{\"children\":[{\"children\":[{\"detail\":0,\"format\":0,\"mode\":\"normal\",\"style\":\"\",\"text\":\"is there a way i can sort files in my cursor file explorer based on date created?\",\"type\":\"text\",\"version\":1}],\"direction\":\"ltr\",\"format\":\"\",\"indent\":0,\"type\":\"paragraph\",\"version\":1}],\"direction\":\"ltr\",\"format\":\"\",\"indent\":0,\"type\":\"root\",\"version\":1}}",
              "isFocused": false,
              "initText": "{\"root\":{\"children\":[{\"children\":[{\"detail\":0,\"format\":0,\"mode\":\"normal\",\"style\":\"\",\"text\":\"is there a way i can sort files in my cursor file explorer based on date created?\",\"type\":\"text\",\"version\":1}],\"direction\":\"ltr\",\"format\":\"\",\"indent\":0,\"type\":\"paragraph\",\"version\":1}],\"direction\":\"ltr\",\"format\":\"\",\"indent\":0,\"type\":\"root\",\"version\":1}}"
            },
            {
              "type": "ai",
              "messageType": 3,
              "id": "153bb660-399d-42ed-9130-bb0f352b19ce",
              "text": "\n\nAs of my last update, Cursor IDE doesn't have a built-in feature to sort files in the file explorer based on date created. The default sorting options in Cursor are typically alphabetical or based on the file structure.\n\nHowever, there are a few workarounds you might consider:\n\n1. Operating System File Explorer:\n   You can use your operating system's file explorer to sort files by date created, then arrange your project files accordingly before opening in Cursor.\n\n2. Custom Script:\n   You could write a script to organize your files based on creation date, then refresh your Cursor workspace.\n\n3. Feature Request:\n   Consider submitting a feature request to the Cursor development team. They are often responsive to user suggestions for new features.\n\n4. Third-party Extensions:\n   While Cursor doesn't support VSCode extensions directly, they sometimes add popular extension functionalities. You could check if there's a file sorting feature in a recent update.\n\n5. Git Integration:\n   If you're using Git, you could potentially use commit dates as a proxy for creation dates, though this isn't perfect.\n\nTo stay updated on new features or to request this functionality, I recommend:\n\n1. Checking the official Cursor documentation regularly\n2. Following Cursor's social media or community forums\n3. Reaching out to Cursor support with your feature request\n\nRemember, IDEs and development tools evolve rapidly. It's possible that Cursor might add this feature in a future update. If this functionality is crucial for your workflow, you might want to periodically check for updates or announcements from the Cursor team.",
              "aiType": "chat",
              "modelType": "claude-3.5-sonnet",
              "suggestedDiffs": [],
              "referencedCodeBlockURIs": [],
              "requestId": "60e53e35-7366-47ab-91b4-74c76f442a4c",
              "rawText": "\n\nAs of my last update, Cursor IDE doesn't have a built-in feature to sort files in the file explorer based on date created. The default sorting options in Cursor are typically alphabetical or based on the file structure.\n\nHowever, there are a few workarounds you might consider:\n\n1. Operating System File Explorer:\n   You can use your operating system's file explorer to sort files by date created, then arrange your project files accordingly before opening in Cursor.\n\n2. Custom Script:\n   You could write a script to organize your files based on creation date, then refresh your Cursor workspace.\n\n3. Feature Request:\n   Consider submitting a feature request to the Cursor development team. They are often responsive to user suggestions for new features.\n\n4. Third-party Extensions:\n   While Cursor doesn't support VSCode extensions directly, they sometimes add popular extension functionalities. You could check if there's a file sorting feature in a recent update.\n\n5. Git Integration:\n   If you're using Git, you could potentially use commit dates as a proxy for creation dates, though this isn't perfect.\n\nTo stay updated on new features or to request this functionality, I recommend:\n\n1. Checking the official Cursor documentation regularly\n2. Following Cursor's social media or community forums\n3. Reaching out to Cursor support with your feature request\n\nRemember, IDEs and development tools evolve rapidly. It's possible that Cursor might add this feature in a future update. If this functionality is crucial for your workflow, you might want to periodically check for updates or announcements from the Cursor team.",
              "codeBlocks": []
            },
            {
              "notepads": [],
              "selections": [],
              "fileSelections": [],
              "folderSelections": [],
              "selectedDocs": [],
              "selectedCommits": [],
              "selectedPullRequests": [],
              "terminalSelections": [],
              "terminalFiles": [],
              "quotes": [],
              "externalLinks": [],
              "selectedImages": [],
              "useWeb": false,
              "mentions": {
                "notepads": {},
                "selections": {},
                "fileSelections": {},
                "folderSelections": {},
                "selectedDocs": {},
                "selectedCommits": {},
                "selectedPullRequests": {},
                "terminalSelections": {},
                "terminalFiles": {},
                "quotes": {},
                "externalLinks": {},
                "selectedImages": {},
                "gitDiff": [],
                "gitDiffFromBranchToMain": [],
                "usesCodebase": [],
                "useWeb": []
              },
              "type": "user",
              "id": "b8c7c2a9-efda-461a-b1c0-42bb7b0e027f",
              "messageType": 2,
              "dropdownAdvancedCodebaseSearchBehavior": "embeddings",
              "followup": true,
              "text": "",
              "isFocused": false
            }
          ],
          "lastSendTime": 1727236515929,
          "tabState": "chat",
          "longContextModeEnabled": false,
          "lastFocusedBubbleId": "b8c7c2a9-efda-461a-b1c0-42bb7b0e027f",
          "noReactiveContext": true,
          "hasNamedTab": true
        },
        {
          "tabId": "d9ee9afe-975c-488d-b710-4e2e309d87ff",
          "tabState": "chat",
          "chatTitle": "Understanding LLM Tokenization and Its Challenges",
          "bubbles": [
            {
              "notepads": [],
              "selections": [],
              "fileSelections": [
                {
                  "uri": {
                    "$mid": 1,
                    "fsPath": "c:\\Users\\hood1\\Brain5\\@karpathy - the weirdness of LLM Tokenization.md",
                    "_sep": 1,
                    "external": "file:///c%3A/Users/hood1/Brain5/%40karpathy%20-%20the%20weirdness%20of%20LLM%20Tokenization.md",
                    "path": "/C:/Users/hood1/Brain5/@karpathy - the weirdness of LLM Tokenization.md",
                    "scheme": "file"
                  },
                  "isCurrentFile": true,
                  "addedWithoutMention": false
                },
                {
                  "uri": {
                    "$mid": 1,
                    "fsPath": "c:\\Users\\hood1\\Brain5\\textgenerator\\prompts\\GenerateSpacedRepetitionPrompts.md",
                    "_sep": 1,
                    "external": "file:///c%3A/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md",
                    "path": "/C:/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md",
                    "scheme": "file"
                  },
                  "uuid": "6",
                  "collapseByDefault": false,
                  "addedWithoutMention": false
                }
              ],
              "folderSelections": [],
              "selectedDocs": [],
              "selectedCommits": [],
              "selectedPullRequests": [],
              "terminalSelections": [],
              "terminalFiles": [],
              "quotes": [],
              "externalLinks": [],
              "selectedImages": [],
              "useWeb": false,
              "mentions": {
                "notepads": {},
                "selections": {},
                "fileSelections": {
                  "file:///c%3A/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md": [
                    {
                      "uuid": "6"
                    }
                  ]
                },
                "folderSelections": {},
                "selectedDocs": {},
                "selectedCommits": {},
                "selectedPullRequests": {},
                "terminalSelections": {},
                "terminalFiles": {},
                "quotes": {},
                "externalLinks": {},
                "selectedImages": {},
                "gitDiff": [],
                "gitDiffFromBranchToMain": [],
                "usesCodebase": [],
                "useWeb": []
              },
              "type": "user",
              "id": "1f21e5d5-b84b-4c0b-b242-441b68aa9f15",
              "messageType": 2,
              "dropdownAdvancedCodebaseSearchBehavior": "embeddings",
              "followup": false,
              "text": "@GenerateSpacedRepetitionPrompts.md ",
              "richText": "{\"root\":{\"children\":[{\"children\":[{\"detail\":1,\"format\":0,\"mode\":\"segmented\",\"style\":\"\",\"text\":\"@GenerateSpacedRepetitionPrompts.md\",\"type\":\"mention\",\"version\":1,\"mentionName\":\"GenerateSpacedRepetitionPrompts.md\",\"storedKey\":\"6\",\"metadata\":{\"selection\":{\"type\":2,\"selectionWithoutUuid\":{\"uri\":{\"$mid\":1,\"fsPath\":\"c:\\\\Users\\\\hood1\\\\Brain5\\\\textgenerator\\\\prompts\\\\GenerateSpacedRepetitionPrompts.md\",\"_sep\":1,\"external\":\"file:///c%3A/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"path\":\"/C:/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"scheme\":\"file\"}}},\"selectedOption\":{\"key\":\"GenerateSpacedRepetitionPrompts.md\",\"type\":\"file\",\"score\":11,\"selectionPrecursor\":{\"uri\":{\"$mid\":1,\"fsPath\":\"c:\\\\Users\\\\hood1\\\\Brain5\\\\textgenerator\\\\prompts\\\\GenerateSpacedRepetitionPrompts.md\",\"_sep\":1,\"external\":\"file:///c%3A/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"path\":\"/C:/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"scheme\":\"file\"}},\"secondaryText\":\"textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"name\":\"GenerateSpacedRepetitionPrompts.md\",\"picture\":{}}}},{\"detail\":1,\"format\":0,\"mode\":\"segmented\",\"style\":\"\",\"text\":\"\",\"type\":\"text\",\"version\":1},{\"detail\":0,\"format\":0,\"mode\":\"normal\",\"style\":\"\",\"text\":\" \",\"type\":\"text\",\"version\":1}],\"direction\":null,\"format\":\"\",\"indent\":0,\"type\":\"paragraph\",\"version\":1}],\"direction\":null,\"format\":\"\",\"indent\":0,\"type\":\"root\",\"version\":1}}",
              "isFocused": false,
              "initText": "{\"root\":{\"children\":[{\"children\":[{\"detail\":1,\"format\":0,\"mode\":\"segmented\",\"style\":\"\",\"text\":\"@GenerateSpacedRepetitionPrompts.md\",\"type\":\"mention\",\"version\":1,\"mentionName\":\"GenerateSpacedRepetitionPrompts.md\",\"storedKey\":\"6\",\"metadata\":{\"selection\":{\"type\":2,\"selectionWithoutUuid\":{\"uri\":{\"$mid\":1,\"fsPath\":\"c:\\\\Users\\\\hood1\\\\Brain5\\\\textgenerator\\\\prompts\\\\GenerateSpacedRepetitionPrompts.md\",\"_sep\":1,\"external\":\"file:///c%3A/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"path\":\"/C:/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"scheme\":\"file\"}}},\"selectedOption\":{\"key\":\"GenerateSpacedRepetitionPrompts.md\",\"type\":\"file\",\"score\":11,\"selectionPrecursor\":{\"uri\":{\"$mid\":1,\"fsPath\":\"c:\\\\Users\\\\hood1\\\\Brain5\\\\textgenerator\\\\prompts\\\\GenerateSpacedRepetitionPrompts.md\",\"_sep\":1,\"external\":\"file:///c%3A/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"path\":\"/C:/Users/hood1/Brain5/textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"scheme\":\"file\"}},\"secondaryText\":\"textgenerator/prompts/GenerateSpacedRepetitionPrompts.md\",\"name\":\"GenerateSpacedRepetitionPrompts.md\",\"picture\":{}}}},{\"detail\":1,\"format\":0,\"mode\":\"segmented\",\"style\":\"\",\"text\":\"\",\"type\":\"text\",\"version\":1},{\"detail\":0,\"format\":0,\"mode\":\"normal\",\"style\":\"\",\"text\":\" \",\"type\":\"text\",\"version\":1}],\"direction\":null,\"format\":\"\",\"indent\":0,\"type\":\"paragraph\",\"version\":1}],\"direction\":null,\"format\":\"\",\"indent\":0,\"type\":\"root\",\"version\":1}}"
            },
            {
              "type": "ai",
              "messageType": 3,
              "id": "c087069a-5b05-4cff-bfa0-ecde272408f6",
              "text": "Here are some effective spaced repetition prompts based on the given content:\n\nWhat does Andrej Karpathy use to explain the weirdness of LLM tokenization?\n?\nHe translates every token to a unique emoji.\n\nAccording to Karpathy, what is each token in an LLM essentially?\n?\nEach token is basically its own little hieroglyph.\n\nWhat does an LLM have to learn from scratch regarding tokens?\n?\nThe LLM has to learn what each token means based on training data statistics.\n\nWhy does Karpathy suggest having empathy when asking an LLM about letter counts in words?\n?\nBecause to the LLM, the question looks like a series of hieroglyphs (tokens) rather than actual letters.\n\nWhat specific example does Karpathy use to illustrate a challenging question for an LLM?\n?\nHow many letters 'r' there are in the word 'strawberry'\n\nWhere can you play with Karpathy's token-to-emoji translation tool?\n?\n{In a Colab notebook} (link provided in the original post)\n\nWhat visual aid does Karpathy use to demonstrate his token-to-emoji translation?\n?\nAn image showing text translated into emojis\n\nWhat is the main concept Karpathy is trying to convey about LLM tokenization?\n?\nThat tokenization creates a representation that is very different from how humans perceive text, making certain tasks challenging for LLMs.\n\n#flashcards",
              "aiType": "chat",
              "modelType": "claude-3.5-sonnet",
              "suggestedDiffs": [],
              "referencedCodeBlockURIs": [],
              "requestId": "c57c0e2d-e238-4af7-bdaa-58384b9a6c8a",
              "rawText": "Here are some effective spaced repetition prompts based on the given content:\n\nWhat does Andrej Karpathy use to explain the weirdness of LLM tokenization?\n?\nHe translates every token to a unique emoji.\n\nAccording to Karpathy, what is each token in an LLM essentially?\n?\nEach token is basically its own little hieroglyph.\n\nWhat does an LLM have to learn from scratch regarding tokens?\n?\nThe LLM has to learn what each token means based on training data statistics.\n\nWhy does Karpathy suggest having empathy when asking an LLM about letter counts in words?\n?\nBecause to the LLM, the question looks like a series of hieroglyphs (tokens) rather than actual letters.\n\nWhat specific example does Karpathy use to illustrate a challenging question for an LLM?\n?\nHow many letters 'r' there are in the word 'strawberry'\n\nWhere can you play with Karpathy's token-to-emoji translation tool?\n?\n{In a Colab notebook} (link provided in the original post)\n\nWhat visual aid does Karpathy use to demonstrate his token-to-emoji translation?\n?\nAn image showing text translated into emojis\n\nWhat is the main concept Karpathy is trying to convey about LLM tokenization?\n?\nThat tokenization creates a representation that is very different from how humans perceive text, making certain tasks challenging for LLMs.\n\n#flashcards",
              "codeBlocks": []
            },
            {
              "notepads": [],
              "selections": [],
              "fileSelections": [
                {
                  "uri": {
                    "$mid": 1,
                    "fsPath": "c:\\Users\\hood1\\Brain5\\@karpathy- cambrian explosion of open source llm ecosystem.md",
                    "_sep": 1,
                    "external": "file:///c%3A/Users/hood1/Brain5/%40karpathy-%20cambrian%20explosion%20of%20open%20source%20llm%20ecosystem.md",
                    "path": "/C:/Users/hood1/Brain5/@karpathy- cambrian explosion of open source llm ecosystem.md",
                    "scheme": "file"
                  },
                  "isCurrentFile": true,
                  "addedWithoutMention": false
                }
              ],
              "folderSelections": [],
              "selectedDocs": [],
              "selectedCommits": [],
              "selectedPullRequests": [],
              "terminalSelections": [],
              "terminalFiles": [],
              "quotes": [],
              "externalLinks": [],
              "selectedImages": [],
              "useWeb": false,
              "mentions": {
                "notepads": {},
                "selections": {},
                "fileSelections": {},
                "folderSelections": {},
                "selectedDocs": {},
                "selectedCommits": {},
                "selectedPullRequests": {},
                "terminalSelections": {},
                "terminalFiles": {},
                "quotes": {},
                "externalLinks": {},
                "selectedImages": {},
                "gitDiff": [],
                "gitDiffFromBranchToMain": [],
                "usesCodebase": [],
                "useWeb": []
              },
              "type": "user",
              "id": "59b885ca-f64e-43c1-b638-cd1a747f732f",
              "messageType": 2,
              "dropdownAdvancedCodebaseSearchBehavior": "embeddings",
              "followup": true,
              "text": "",
              "isFocused": false
            }
          ],
          "longContextModeEnabled": false,
          "lastFocusedBubbleId": "59b885ca-f64e-43c1-b638-cd1a747f732f",
          "lastSendTime": 1727234748193,
          "hasNamedTab": true
        }
      ],
      "codeInterpreterTabs": [],
      "selectedTabId": "bc8d2a24-8b68-4a7f-bad9-e7dfcdee35ca",
      "displayTabs": false,
      "editorContext": {
        "isNotebook": false,
        "hasNonemptySelection": false
      },
      "debugPromptVisible": false,
      "pinnedContexts": {
        "fileSelections": [],
        "codeSelections": []
      },
      "inputBoxDelegate": {
        "c": {
          "__lexicalTextContent": "",
          "__lexicalDirTextContent": "",
          "__lexicalDir": null,
          "__lexicalEditor": {
            "editorState": {
              "root": {
                "children": [
                  {
                    "children": [],
                    "direction": null,
                    "format": "",
                    "indent": 0,
                    "type": "paragraph",
                    "version": 1
                  }
                ],
                "direction": null,
                "format": "",
                "indent": 0,
                "type": "root",
                "version": 1
              }
            }
          },
          "__lexicalEventHandles": [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null
          ]
        },
        "d": {
          "editorState": {
            "root": {
              "children": [
                {
                  "children": [],
                  "direction": null,
                  "format": "",
                  "indent": 0,
                  "type": "paragraph",
                  "version": 1
                }
              ],
              "direction": null,
              "format": "",
              "indent": 0,
              "type": "root",
              "version": 1
            }
          }
        },
        "e": false
      },
      "inputBoxDelegateMap": {}
    }
  },
  {
    "key": "workbench.panel.aichat",
    "data": {
      "workbench.panel.aichat.view": {
        "collapsed": false,
        "isHidden": true,
        "size": 927
      }
    }
  }
]